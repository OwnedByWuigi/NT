#include "dxfilter.h"

static DWORD TEXF_NONE_D3DXFilters[] =
{
	D3DX_FILTER_POINT,
	D3DX_FILTER_POINT | D3DX_FILTER_MIRROR,
	D3DX_FILTER_LINEAR,
	D3DX_FILTER_LINEAR | D3DX_FILTER_MIRROR
};

static DWORD TEXF_POINT_D3DXFilters[] =
{
	D3DX_FILTER_POINT,
	D3DX_FILTER_POINT | D3DX_FILTER_MIRROR
};

static DWORD TEXF_LINEAR_D3DXFilters[] =
{
	D3DX_FILTER_LINEAR,
	D3DX_FILTER_LINEAR | D3DX_FILTER_MIRROR
};

D3DTEXTUREFILTERTYPE_RECORD DXFilterTypes[] =
{
	{
		TEXF_NONE,
		"D3DTEXF_NONE",
		0,
		(sizeof(TEXF_NONE_D3DXFilters) / sizeof(TEXF_NONE_D3DXFilters[0])),
		TEXF_NONE_D3DXFilters
	},
	{
		TEXF_POINT,
		"D3DTEXF_POINT",
		D3DPTFILTERCAPS_MINFPOINT | D3DPTFILTERCAPS_MAGFPOINT,
		(sizeof(TEXF_POINT_D3DXFilters) / sizeof(TEXF_POINT_D3DXFilters[0])),
		TEXF_POINT_D3DXFilters
	},
	{
		TEXF_LINEAR,
		"D3DTEXF_LINEAR",
		D3DPTFILTERCAPS_MINFLINEAR | D3DPTFILTERCAPS_MAGFLINEAR,
		(sizeof(TEXF_LINEAR_D3DXFilters) / sizeof(TEXF_LINEAR_D3DXFilters[0])),
		TEXF_LINEAR_D3DXFilters
	}
};

CONST UINT cuiNoOfFilterTypes = (sizeof(DXFilterTypes) / sizeof(DXFilterTypes[0]));
